Most Used SQL Commands:

    ðŸ”¹ SELECT
    Used to retrieve data from a table.
    SELECT name, age FROM employees;

    ðŸ”¹ FROM
    Specifies the table you're querying.
    SELECT * FROM employees;

    ðŸ”¹ WHERE
    Filters rows based on a condition.
    SELECT * FROM employees WHERE age > 30;

    ðŸ”¹ INSERT INTO
    Adds new rows of data to a table.
    INSERT INTO employees (name, age) VALUES ('Alice', 28);

    ðŸ”¹ UPDATE
    Modifies existing data.
    UPDATE employees SET age = 29 WHERE name = 'Alice';

    ðŸ”¹ DELETE
    Removes rows from a table.
    DELETE FROM employees WHERE name = 'Alice';

    ðŸ”¹ CREATE TABLE
    Creates a new table.
    CREATE TABLE employees (
        id INTEGER PRIMARY KEY,
        name TEXT,
        age INTEGER
    );

    ðŸ”¹ DROP TABLE
    Deletes an entire table and its data.
    DROP TABLE employees;

    ðŸ”¹ ALTER TABLE
    Modifies the structure of a table, like adding a column.
    ALTER TABLE employees ADD COLUMN email TEXT;

    ðŸ”¹ ORDER BY
    Sorts results by a column, default is ascending (ASC).
    SELECT * FROM employees ORDER BY age DESC;

    ðŸ”¹ LIMIT
    Restricts the number of rows returned.
    SELECT * FROM employees LIMIT 5;

âœ… Most Used Operators in SQL

    ðŸ”¹ Comparison Operators
        = â†’ Equal
        != or <> â†’ Not equal
        > / < â†’ Greater / Less than
        >= / <= â†’ Greater or equal / Less or equal
        Example:
        SELECT * FROM employees WHERE age >= 30;

    ðŸ”¹ Logical Operators
        AND â†’ Both conditions must be true
        OR â†’ At least one condition is true
        NOT â†’ Inverts the condition
        Example:
        SELECT * FROM employees WHERE age > 30 AND department = 'Sales';

    ðŸ”¹ IN
        Checks if a value is in a list.
        SELECT * FROM employees WHERE department IN ('HR', 'IT');

    ðŸ”¹ BETWEEN
        Checks if a value is between two others.
        SELECT * FROM employees WHERE age BETWEEN 25 AND 35;

    ðŸ”¹ LIKE
        Used for pattern matching with wildcards:
            % = any number of characters
            _ = exactly one character
        SELECT * FROM employees WHERE name LIKE 'A%';

ðŸ§  Bonus: Aggregate Functions
    Used for calculations:
        COUNT() â€“ number of rows
        SUM() â€“ total
        AVG() â€“ average
        MIN() / MAX() â€“ lowest / highest value
    Example:
    SELECT COUNT(*) FROM employees WHERE department = 'IT';

Summary for Your First SQL Tutorial :
    SELECT	Get data from a table
    INSERT INTO	Add new data
    UPDATE	Change existing data
    DELETE	Remove data
    CREATE TABLE	Make a new table
    WHERE	Filter rows
    ORDER BY	Sort results
    LIMIT	Limit how many rows you get
    AND / OR	Combine conditions
    LIKE	Pattern matching

Data types:
    1. INTEGER
        Description: Used to store whole numbers (both positive and negative).
        Examples: 1, 99, -42, 0
        Usage: Often used for primary keys or counters.
        age INTEGER

    2. REAL
        Description: Used to store floating-point numbers (decimal values).
        Examples: 3.14, -7.5, 100.0, 0.25
        Usage: Used for prices, measurements, or any data requiring precision with decimals.
        price REAL

    3. TEXT
        Description: Used to store textual data (strings of characters).
        Examples: 'John', 'example@example.com', '2025-05-01'
        Usage: Used for names, addresses, descriptions, and other types of string data.
        name TEXT

    4. BLOB (Binary Large Object)
        Description: Used to store binary data, such as images, audio files, or any large binary data.
        Examples: Images, audio, PDF files.
        Usage: Used for storing files or data that isn't in plain text.
        profile_picture BLOB

    5. NULL
        Description: Represents a missing or undefined value.
        Usage: If a value is unknown or doesn't exist, you can use NULL.
        middle_name TEXT NULL

    6. DATE
        Description: Used to store dates in YYYY-MM-DD format.
        Examples: '2025-05-01'
        Usage: Used to store birthdates, appointment dates, etc.
        birth_date DATE

    7. DATETIME
        Description: Used to store date and time in YYYY-MM-DD HH:MM:SS format.
        Examples: '2025-05-01 14:30:00'
        Usage: Used for timestamps or to record when an event occurs.
        created_at DATETIME

    8. BOOLEAN
        Description: A logical value representing true or false.
        Examples: TRUE, FALSE, or 1, 0 in some databases.
        Usage: Used for flags or yes/no conditions.
        is_active BOOLEAN

Summary :
    INTEGER: Whole numbers.
    REAL: Floating-point numbers (decimals).
    TEXT: Strings (alphanumeric characters).
    BLOB: Binary data (images, files).
    NULL: Undefined or missing value.
    DATE: Date values (YYYY-MM-DD).
    DATETIME: Date and time values (YYYY-MM-DD HH:MM:SS).
    BOOLEAN: Logical values (TRUE or FALSE).